# Ta-Lib function mapping class 
# Function: 'HT_TRENDMODE'
# Description: 'Hilbert Transform - Trend vs Cycle Mode'
# This file has been autogenerated - Do Not Edit.
class Indicator::AutoGen::HtTrendMode < Indicator::Base

  def initialize(*args)
    
    @func = TaLib::Function.new("HT_TRENDMODE")
  end

  # Is price data required as an input
  def self.price_input?
    false
  end

  # The list of arguments
  def self.arguments
    [  ]
  end

  # The minimum set of inputs required
  def self.inputs
    [ :in_real ]
  end

  # The outputs generated by this function
  def self.outputs
    [ :out_integer ]
  end

  def run(in_real)
    len = map(in_real).length
    @func.in_real(0, map(in_real))


    out_integer = Array.new(len)
    @func.out_int(0, out_integer)
  
    @func.call(0, len - 1)

    out_integer
  end
end
