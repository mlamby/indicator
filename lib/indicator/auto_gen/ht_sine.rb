# Ta-Lib function mapping class 
# Function: 'HT_SINE'
# Description: 'Hilbert Transform - SineWave'
# This file has been autogenerated - Do Not Edit.
class Indicator::AutoGen::HtSine < Indicator::Base

  def initialize(*args)
    
    @func = TaLib::Function.new("HT_SINE")
  end

  # Is price data required as an input
  def self.price_input?
    false
  end

  # The list of arguments
  def self.arguments
    [  ]
  end

  # The minimum set of inputs required
  def self.inputs
    [ :in_real ]
  end

  # The outputs generated by this function
  def self.outputs
    [ :out_sine, :out_lead_sine ]
  end

  def run(in_real)
    len = map(in_real).length
    @func.in_real(0, map(in_real))


    out_sine = Array.new(len)
    @func.out_real(0, out_sine)
    out_lead_sine = Array.new(len)
    @func.out_real(1, out_lead_sine)
  
    @func.call(0, len - 1)

  {:out_sine => out_sine,
    :out_lead_sine => out_lead_sine}
  end
end
